// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nadasdladany.Data;

#nullable disable

namespace Nadasdladany.Migrations
{
    [DbContext(typeof(NadasdladanyDbContext))]
    [Migration("20250621135518_documents")]
    partial class documents
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nadasdladany.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FeaturedImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Nádasdladány Önkormányzat",
                            CategoryId = 2,
                            Content = "<p>Részletes leírás az ünnepi megemlékezésről, amely a nemzeti ünnepünk alkalmából került megrendezésre a község főterén. Beszédet mondott Varga Tünde polgármester asszony.</p>",
                            Excerpt = "Rövid összefoglaló az ünnepi megemlékezésről, amely a főtéren került megrendezésre.",
                            FeaturedImageUrl = "/images/placeholder/news_placeholder_1.jpg",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 3, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublishedDate = new DateTime(2024, 3, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "unnepi-megemlekezes-foteren",
                            Title = "Ünnepi Megemlékezés a Főtéren",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nádasdladány Önkormányzat",
                            CategoryId = 1,
                            Content = "<p>Az új játszótér átadásának részletei. Modern játékokkal és biztonságos környezettel várjuk a gyermekeket és családjaikat.</p>",
                            Excerpt = "Örömmel jelentjük be, hogy átadásra került a felújított központi játszótér a Kossuth utcában.",
                            FeaturedImageUrl = "/images/placeholder/news_placeholder_2.jpg",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 4, 22, 14, 0, 0, 0, DateTimeKind.Utc),
                            PublishedDate = new DateTime(2024, 4, 22, 14, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "uj-jatszoter-atadasa-kossuth-utcaban",
                            Title = "Új Játszótér Átadása a Kossuth Utcában",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            Author = "Nádasdladány Önkormányzat",
                            CategoryId = 3,
                            Content = "<p>Tájékoztatjuk a tisztelt lakosságot, hogy a következő közmeghallgatás időpontja 2024. május 15., 17:00. Helyszín: Művelődési Ház. Témák: éves költségvetés, fejlesztési tervek.</p>",
                            Excerpt = "Fontos információk a következő közmeghallgatásról, melynek fő témái a költségvetés és a fejlesztések lesznek.",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 5, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            PublishedDate = new DateTime(2024, 5, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "kozmeghallgatas-idopontja-temai",
                            Title = "Közmeghallgatás Időpontja és Témái",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hírek a helyi önkormányzat működéséről.",
                            Name = "Önkormányzati Hírek",
                            Slug = "onkormanyzati-hirek"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Információk a település közösségi programjairól.",
                            Name = "Közösségi Események",
                            Slug = "kozossegi-esemenyek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fontos közlemények a lakosság számára.",
                            Name = "Közlemények",
                            Slug = "kozlemenyek"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentCategoryId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Nádasdladány község 2024. évi költségvetéséről szóló 1/2024. (II.15.) önkormányzati rendelet.",
                            DocumentCategoryId = 1,
                            FilePath = "documents/rendeletek/2024/1-2024-koltsegvetes.pdf",
                            FileSizeInBytes = 123456L,
                            FileType = "PDF",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "2024. évi költségvetési rendelet",
                            UploadedDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Description = "A Képviselő-testület rendes ülésének jegyzőkönyve.",
                            DocumentCategoryId = 2,
                            FilePath = "documents/jegyzokonyvek/2024/2024-03-10-testuleti-ules.pdf",
                            FileSizeInBytes = 234567L,
                            FileType = "PDF",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "2024. március 10-i testületi ülés jegyzőkönyve",
                            UploadedDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Az önkormányzat adatkezelési gyakorlatáról szóló hivatalos tájékoztató.",
                            DocumentCategoryId = 4,
                            FilePath = "documents/kozerdeku/adatkezelesi-tajekoztato-2024.pdf",
                            FileSizeInBytes = 98765L,
                            FileType = "PDF",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Adatkezelési Tájékoztató",
                            UploadedDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.DocumentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("DocumentCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Önkormányzati rendeletek gyűjteménye.",
                            Name = "Rendeletek",
                            Slug = "rendeletek"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Képviselő-testületi és bizottsági ülések jegyzőkönyvei.",
                            Name = "Jegyzőkönyvek",
                            Slug = "jegyzokonyvek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A Képviselő-testület és a polgármester határozatai.",
                            Name = "Határozatok",
                            Slug = "hatarozatok"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Törvény által kötelezően közzéteendő közérdekű adatok.",
                            Name = "Közérdekű Adatok",
                            Slug = "kozerdeku-adatok"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Elnyert pályázatok és azokhoz kapcsolódó dokumentumok, beszámolók.",
                            Name = "Pályázatok és Beszámolók",
                            Slug = "palyazatok-beszamolok"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Organizer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Egész napos programok kicsiknek és nagyoknak. Koncertek, főzőverseny, kézműves vásár, gyerekprogramok és esti tűzijáték.",
                            EndDate = new DateTime(2024, 6, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            EventUrl = "/esemenyek/falunap-2024",
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Községi Sportpálya és Szabadidőpark",
                            Organizer = "Nádasdladány Önkormányzat",
                            Slug = "nadasdladanyi-falunap-2024",
                            StartDate = new DateTime(2024, 6, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Nádasdladányi Falunap 2024"
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "konyvtar@nadasdladany.hu",
                            Description = "Beszélgetés a nyár legnépszerűbb könyveiről, ajánlók és közös élmények megosztása.",
                            EndDate = new DateTime(2024, 6, 26, 18, 0, 0, 0, DateTimeKind.Utc),
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Helyi Könyvtár Olvasóterme",
                            Organizer = "Nádasdladányi Könyvtár",
                            Slug = "konyvtari-olvasoklub-nyari-olvasmanyok",
                            StartDate = new DateTime(2024, 6, 26, 17, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Könyvtári Olvasóklub: Nyári Olvasmányok"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Szeretettel várjuk szépkorú lakosainkat egy közös ünnepségre a Művelődési Ház nagytermében. Ünnepi műsorral és vendéglátással készülünk.",
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Művelődési Ház",
                            Organizer = "Nádasdladány Önkormányzat és a Helyi Nyugdíjas Klub",
                            Slug = "idosek-napja-unnepseg-2024",
                            StartDate = new DateTime(2024, 7, 11, 15, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Idősek Napja Ünnepség"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Nagyszabású falunap sok meglepetéssel, hagyományőrző programokkal, esti koncerttel és tűzijátékkal ünnepeljük községünket!",
                            EndDate = new DateTime(2026, 6, 9, 23, 0, 0, 0, DateTimeKind.Utc),
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Központi Rendezvénytér",
                            Organizer = "Nádasdladány Önkormányzata",
                            Slug = "nadasdladanyi-falunap-2026",
                            StartDate = new DateTime(2026, 6, 9, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Nádasdladányi Falunap 2026"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Article", b =>
                {
                    b.HasOne("Nadasdladany.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Nadasdladany.Models.Document", b =>
                {
                    b.HasOne("Nadasdladany.Models.DocumentCategory", "DocumentCategory")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentCategory");
                });

            modelBuilder.Entity("Nadasdladany.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Nadasdladany.Models.DocumentCategory", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
