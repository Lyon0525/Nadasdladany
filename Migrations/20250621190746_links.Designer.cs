// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nadasdladany.Data;

#nullable disable

namespace Nadasdladany.Migrations
{
    [DbContext(typeof(NadasdladanyDbContext))]
    [Migration("20250621190746_links")]
    partial class links
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nadasdladany.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FeaturedImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Nádasdladány Önkormányzat",
                            CategoryId = 2,
                            Content = "<p>...</p>",
                            Excerpt = "...",
                            FeaturedImageUrl = "/images/placeholder/news_placeholder_1.jpg",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 3, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublishedDate = new DateTime(2024, 3, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "unnepi-megemlekezes-foteren",
                            Title = "Ünnepi Megemlékezés a Főtéren",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nádasdladány Önkormányzat",
                            CategoryId = 1,
                            Content = "<p>...</p>",
                            Excerpt = "...",
                            FeaturedImageUrl = "/images/placeholder/news_placeholder_2.jpg",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 4, 22, 14, 0, 0, 0, DateTimeKind.Utc),
                            PublishedDate = new DateTime(2024, 4, 22, 14, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "uj-jatszoter-atadasa-kossuth-utcaban",
                            Title = "Új Játszótér Átadása a Kossuth Utcában",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            Author = "Nádasdladány Önkormányzat",
                            CategoryId = 3,
                            Content = "<p>...</p>",
                            Excerpt = "...",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 5, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            PublishedDate = new DateTime(2024, 5, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "kozmeghallgatas-idopontja-temai",
                            Title = "Közmeghallgatás Időpontja és Témái",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hírek a helyi önkormányzat működéséről.",
                            Name = "Önkormányzati Hírek",
                            Slug = "onkormanyzati-hirek"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Információk a település közösségi programjairól.",
                            Name = "Közösségi Események",
                            Slug = "kozossegi-esemenyek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fontos közlemények a lakosság számára.",
                            Name = "Közlemények",
                            Slug = "kozlemenyek"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.ContactSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactSubmissions");
                });

            modelBuilder.Entity("Nadasdladany.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentCategoryId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "...",
                            DocumentCategoryId = 1,
                            FilePath = "documents/rendeletek/2024/1-2024-koltsegvetes.pdf",
                            FileSizeInBytes = 123456L,
                            FileType = "PDF",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "2024. évi költségvetési rendelet",
                            UploadedDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Description = "A Képviselő-testület rendes ülésének jegyzőkönyve.",
                            DocumentCategoryId = 2,
                            FilePath = "documents/jegyzokonyvek/2024/2024-03-10-testuleti-ules.pdf",
                            FileSizeInBytes = 234567L,
                            FileType = "PDF",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "2024. március 10-i testületi ülés jegyzőkönyve",
                            UploadedDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Az önkormányzat adatkezelési gyakorlatáról szóló hivatalos tájékoztató.",
                            DocumentCategoryId = 4,
                            FilePath = "documents/kozerdeku/adatkezelesi-tajekoztato-2024.pdf",
                            FileSizeInBytes = 98765L,
                            FileType = "PDF",
                            IsPublished = true,
                            LastModifiedDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Adatkezelési Tájékoztató",
                            UploadedDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.DocumentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("DocumentCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Önkormányzati rendeletek gyűjteménye.",
                            Name = "Rendeletek",
                            Slug = "rendeletek"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Képviselő-testületi és bizottsági ülések jegyzőkönyvei.",
                            Name = "Jegyzőkönyvek",
                            Slug = "jegyzokonyvek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A Képviselő-testület és a polgármester határozatai.",
                            Name = "Határozatok",
                            Slug = "hatarozatok"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Törvény által kötelezően közzéteendő közérdekű adatok.",
                            Name = "Közérdekű Adatok",
                            Slug = "kozerdeku-adatok"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Elnyert pályázatok és azokhoz kapcsolódó dokumentumok, beszámolók.",
                            Name = "Pályázatok és Beszámolók",
                            Slug = "palyazatok-beszamolok"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Organizer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "...",
                            EndDate = new DateTime(2024, 6, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            EventUrl = "/esemenyek/falunap-2024",
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Községi Sportpálya és Szabadidőpark",
                            Organizer = "Nádasdladány Önkormányzat",
                            Slug = "nadasdladanyi-falunap-2024",
                            StartDate = new DateTime(2024, 6, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Nádasdladányi Falunap 2024"
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "konyvtar@nadasdladany.hu",
                            Description = "...",
                            EndDate = new DateTime(2024, 6, 26, 18, 0, 0, 0, DateTimeKind.Utc),
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Helyi Könyvtár Olvasóterme",
                            Organizer = "Nádasdladányi Könyvtár",
                            Slug = "konyvtari-olvasoklub-nyari-olvasmanyok-2024",
                            StartDate = new DateTime(2024, 6, 26, 17, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Könyvtári Olvasóklub: Nyári Olvasmányok 2024"
                        },
                        new
                        {
                            Id = 3,
                            Description = "...",
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Művelődési Ház",
                            Organizer = "Nádasdladány Önkormányzat és a Helyi Nyugdíjas Klub",
                            Slug = "idosek-napja-unnepseg-2024",
                            StartDate = new DateTime(2024, 7, 11, 15, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Idősek Napja Ünnepség 2024"
                        },
                        new
                        {
                            Id = 4,
                            Description = "...",
                            EndDate = new DateTime(2026, 6, 9, 23, 0, 0, 0, DateTimeKind.Utc),
                            IsAllDay = false,
                            IsPublished = true,
                            Location = "Központi Rendezvénytér",
                            Organizer = "Nádasdladány Önkormányzata",
                            Slug = "nadasdladanyi-falunap-2026",
                            StartDate = new DateTime(2026, 6, 9, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Nádasdladányi Falunap 2025"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.GalleryAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("GalleryAlbums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "...",
                            DisplayOrder = 10,
                            IsPublished = true,
                            Slug = "falunapok",
                            Title = "Falunapok"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "...",
                            DisplayOrder = 20,
                            IsPublished = true,
                            Slug = "telepuleskepek",
                            Title = "Településképek"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "...",
                            DisplayOrder = 5,
                            IsPublished = true,
                            Slug = "nadasdy-kastely",
                            Title = "Nádasdy-kastély"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.GalleryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("GalleryAlbumId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GalleryAlbumId");

                    b.ToTable("GalleryImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltText = "Falunapi tömeg",
                            Description = "...",
                            DisplayOrder = 1,
                            GalleryAlbumId = 1,
                            ImageUrl = "/images/gallery/falunap_2023_01.jpg",
                            IsPublished = true,
                            ThumbnailUrl = "/images/gallery/thumbs/falunap_2023_01_thumb.jpg",
                            Title = "Falunapi Forgatag 2023",
                            UploadedDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            AltText = "Nádasdy kastélypark ősszel",
                            Description = "...",
                            DisplayOrder = 1,
                            GalleryAlbumId = 3,
                            ImageUrl = "/images/gallery/kastely_park_osz.jpg",
                            IsPublished = true,
                            ThumbnailUrl = "/images/gallery/thumbs/kastely_park_osz_thumb.jpg",
                            Title = "Kastélypark Ősszel",
                            UploadedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            AltText = "Főtér naplementében",
                            Description = "Látkép a község főteréről naplementekor.",
                            DisplayOrder = 1,
                            GalleryAlbumId = 2,
                            ImageUrl = "/images/gallery/foter_naplemente.jpg",
                            IsPublished = true,
                            ThumbnailUrl = "/images/gallery/thumbs/foter_naplemente_thumb.jpg",
                            Title = "Főtér Naplementében",
                            UploadedDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            AltText = "Gyerekek az ugrálóvárban",
                            Description = "Ugrálóvár és vidámság.",
                            DisplayOrder = 2,
                            GalleryAlbumId = 1,
                            ImageUrl = "/images/gallery/falunap_gyerekek.jpg",
                            IsPublished = true,
                            ThumbnailUrl = "/images/gallery/thumbs/falunap_gyerekek_thumb.jpg",
                            Title = "Gyerekek a Falunapon",
                            UploadedDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            AltText = "Nádasdy-kastély homlokzat",
                            Description = "A Nádasdy-kastély impozáns főhomlokzata.",
                            DisplayOrder = 2,
                            GalleryAlbumId = 3,
                            ImageUrl = "/images/gallery/kastely_homlokzat.jpg",
                            IsPublished = true,
                            ThumbnailUrl = "/images/gallery/thumbs/kastely_homlokzat_thumb.jpg",
                            Title = "Kastély Homlokzat",
                            UploadedDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IconCssClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Slug")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Nádasdladány, Iskola utca 1. (P)",
                            Description = "Községünk általános iskolája, amely alapfokú oktatást biztosít a helyi és környékbeli gyermekek számára.",
                            DisplayOrder = 10,
                            Email = "iskola@nadasdladany.edu.hu (P)",
                            IconCssClass = "bi bi-book-fill",
                            ImageUrl = "/images/institutions/iskola-placeholder.jpg",
                            IsPublished = true,
                            Name = "Nádasdy Ferenc Általános Iskola",
                            PhoneNumber = "+36 (22) 234-567 (P)",
                            Slug = "nadasdy-ferenc-altalanos-iskola",
                            WebsiteUrl = "http://www.nadasdyiskola-nl.hu/"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nádasdladány, Óvoda köz 2. (P)",
                            Description = "Szeretetteljes és biztonságos környezetben neveljük a legkisebbeket, felkészítve őket az iskolás évekre.",
                            DisplayOrder = 20,
                            Email = "ovoda@nadasdladany.edu.hu (P)",
                            IconCssClass = "bi bi-palette-fill",
                            ImageUrl = "/images/institutions/ovoda-placeholder.jpg",
                            IsPublished = true,
                            Name = "Napraforgó Óvoda és Bölcsőde",
                            PhoneNumber = "+36 (22) 345-678 (P)",
                            Slug = "napraforgo-ovoda-es-bolcsode"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Nádasdladány, Kultúra tér 3. (P)",
                            Description = "Közösségi programok, kulturális események, kiállítások és könyvtári szolgáltatások helyszíne.",
                            DisplayOrder = 30,
                            Email = "muvhaz@nadasdladany.info (P)",
                            IconCssClass = "bi bi-collection-play-fill",
                            ImageUrl = "/images/institutions/muvhaz-placeholder.jpg",
                            IsPublished = true,
                            Name = "Művelődési Ház és Könyvtár",
                            PhoneNumber = "+36 (22) 456-789 (P)",
                            Slug = "muvelodesi-haz-es-konyvtar",
                            WebsiteUrl = "http://www.nadasdladanyimuvelodesihaz.hu"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Nádasdladány, Egészség út 4. (P)",
                            Description = "Háziorvosi és gyermekorvosi ellátás a település lakosai számára.",
                            DisplayOrder = 40,
                            IconCssClass = "bi bi-heart-pulse-fill",
                            ImageUrl = "/images/institutions/orvosi-rendelo-placeholder.jpg",
                            IsPublished = true,
                            Name = "Orvosi Rendelő (Háziorvos)",
                            PhoneNumber = "+36 (22) 567-890 (P)",
                            Slug = "orvosi-rendelo-haziorvos"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Nádasdladány, Egészség út 4/B. (P)",
                            Description = "Fogászati alapellátás és szakellátás.",
                            DisplayOrder = 50,
                            IconCssClass = "bi bi-bandaid-fill",
                            ImageUrl = "/images/institutions/fogorvosi-rendelo-placeholder.jpg",
                            IsPublished = true,
                            Name = "Fogorvosi Rendelő",
                            PhoneNumber = "+36 (22) 678-901 (P)",
                            Slug = "fogorvosi-rendelo"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.OfficeHourEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("TimeDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OfficeHourEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = 1,
                            DisplayOrder = 1,
                            TimeDescription = "8:00 - 12:00 és 13:00 - 16:00"
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = 2,
                            DisplayOrder = 2,
                            TimeDescription = "Nincs ügyfélfogadás"
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = 3,
                            DisplayOrder = 3,
                            TimeDescription = "8:00 - 12:00 és 13:00 - 17:00 (Hosszított)"
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeek = 4,
                            DisplayOrder = 4,
                            TimeDescription = "Nincs ügyfélfogadás"
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeek = 5,
                            DisplayOrder = 5,
                            TimeDescription = "8:00 - 12:00"
                        },
                        new
                        {
                            Id = 6,
                            DayOfWeek = 6,
                            DisplayOrder = 6,
                            TimeDescription = "Zárva"
                        },
                        new
                        {
                            Id = 7,
                            DayOfWeek = 0,
                            DisplayOrder = 7,
                            TimeDescription = "Zárva"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.OfficeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutOffice")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GoogleMapsEmbedUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OfficeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("OfficeInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutOffice = "<p>A Nádasdladányi Polgármesteri Hivatal felelős a helyi önkormányzati feladatok ellátásáért, a képviselő-testület döntéseinek végrehajtásáért, valamint a lakossági ügyintézésért. Célunk a hatékony, átlátható és ügyfélbarát közigazgatás biztosítása.</p><p>Munkatársaink készséggel állnak rendelkezésükre a különböző ügytípusokban, legyen szó adóügyekről, szociális támogatásokról, anyakönyvi kivonatokról vagy helyi engedélyekről.</p>",
                            Address = "8145 Nádasdladány, Fő utca 1.",
                            Email = "hivatal@nadasdladany.hu",
                            GoogleMapsEmbedUrl = "<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2710.894867318367!2d18.23535761561613!3d47.20190097915973!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4769eb3b71697cc9%3A0x3a905520d403d2b9!2sN%C3%A1dasdlad%C3%A1ny%2C%20F%C5%91%20utca%201!5e0!3m2!1shu!2shu!4v1620000000000!5m2!1shu!2shu\" width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"></iframe>",
                            OfficeName = "Nádasdladányi Polgármesteri Hivatal",
                            PhoneNumber = "+36 (22) 123-456",
                            WebsiteUrl = "https://www.nadasdladany.hu"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Representative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomTitleOverride")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ReceptionHoursInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Representatives");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "<p>Tisztelt Nádasdladányiak! Polgármesterként legfőbb célom községünk fejlődése és közösségünk erősítése. Nyitott ajtókkal várom Önöket!</p>",
                            DisplayOrder = 1,
                            Email = "polgarmester@nadasdladany.hu",
                            ImageUrl = "/images/representatives/mayor-varga-tunde.jpg",
                            IsPublished = true,
                            Name = "Varga Tünde",
                            PhoneNumber = "+36 (30) 111-2233",
                            ReceptionHoursInfo = "Minden hónap első szerdáján 14:00-16:00 (Előzetes bejelentkezés szükséges)",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            CustomTitleOverride = "Alpolgármester, Pénzügyi és Ügyrendi Bizottság Elnöke",
                            DisplayOrder = 2,
                            Email = "alpolgarmester@nadasdladany.hu",
                            ImageUrl = "/images/representatives/kovacs-istvan.jpg",
                            IsPublished = true,
                            Name = "Dr. Kovács István",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            CustomTitleOverride = "Képviselő, Szociális és Kulturális Bizottság Tagja",
                            DisplayOrder = 3,
                            ImageUrl = "/images/representatives/nagy-maria.jpg",
                            IsPublished = true,
                            Name = "Nagy Mária",
                            Role = 2
                        },
                        new
                        {
                            Id = 4,
                            CustomTitleOverride = "Jegyző",
                            DisplayOrder = 10,
                            Email = "jegyzo@nadasdladany.hu",
                            ImageUrl = "/images/representatives/horvath-geza-jegyzo.jpg",
                            IsPublished = true,
                            Name = "Horváth Géza",
                            PhoneNumber = "+36 (22) 123-457",
                            Role = 3
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.UsefulLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("OpenInNewTab")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("UsefulLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Kormányzati",
                            Description = "Központi elektronikus ügyintézési és információs portál.",
                            DisplayOrder = 10,
                            IsPublished = true,
                            OpenInNewTab = true,
                            Title = "Magyarország.hu - Kormányzati Portál",
                            Url = "https://www.magyarorszag.hu"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Kormányzati",
                            Description = "Adóügyekkel kapcsolatos információk és online ügyintézés.",
                            DisplayOrder = 20,
                            IsPublished = true,
                            OpenInNewTab = true,
                            Title = "Nemzeti Adó- és Vámhivatal (NAV)",
                            Url = "https://www.nav.gov.hu"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Kormányzati",
                            Description = "A vármegyei kormányhivatal hivatalos oldala.",
                            DisplayOrder = 30,
                            IsPublished = true,
                            OpenInNewTab = true,
                            Title = "Fejér Vármegyei Kormányhivatal",
                            Url = "http://www.kormanyhivatal.hu/hu/fejer"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Helyi Szolgáltatások",
                            Description = "Hulladéknaptár és információk a szelektív hulladékgyűjtésről.",
                            DisplayOrder = 40,
                            IsPublished = true,
                            OpenInNewTab = true,
                            Title = "Helyi Hulladékszállítási Információk (VERTIKÁL)",
                            Url = "https://www.vertikalzrt.hu/"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Közlekedés",
                            DisplayOrder = 50,
                            IsPublished = true,
                            OpenInNewTab = true,
                            Title = "MÁV-START (Vasúti Menetrend)",
                            Url = "https://www.mavcsoport.hu/mav-start/belfoldi-utazas/menetrend"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Közlekedés",
                            DisplayOrder = 60,
                            IsPublished = true,
                            OpenInNewTab = true,
                            Title = "Volánbusz (Autóbusz Menetrend)",
                            Url = "https://www.volanbusz.hu/hu/menetrendek"
                        });
                });

            modelBuilder.Entity("Nadasdladany.Models.Article", b =>
                {
                    b.HasOne("Nadasdladany.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Nadasdladany.Models.Document", b =>
                {
                    b.HasOne("Nadasdladany.Models.DocumentCategory", "DocumentCategory")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentCategory");
                });

            modelBuilder.Entity("Nadasdladany.Models.GalleryImage", b =>
                {
                    b.HasOne("Nadasdladany.Models.GalleryAlbum", "GalleryAlbum")
                        .WithMany("Images")
                        .HasForeignKey("GalleryAlbumId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("GalleryAlbum");
                });

            modelBuilder.Entity("Nadasdladany.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Nadasdladany.Models.DocumentCategory", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Nadasdladany.Models.GalleryAlbum", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
